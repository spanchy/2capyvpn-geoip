name: Build geoip.dat
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - master
    paths-ignore:
      - "README.md"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set tag
        run: |
          DAILY_TAG=$(date +%Y%m%d%H%M)
          echo "DAILY_TAG=$DAILY_TAG" >> $GITHUB_ENV

      - name: Create Tag
        uses: actions/github-script@v7
        with:
          script: |
            const {DAILY_TAG} = process.env
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${DAILY_TAG}`,
              sha: context.sha
            })

      - name: Download MaxMind GeoLite2
        run: |
          curl -L "https://dl.netsyms.net/dbs/geolite2/GeoLite2-Country-CSV.zip" -o GeoLite2-Country-CSV.zip

      - name: Build Docker image
        run: docker build -t geoip-generator .

      - name: Run Docker container
        run: |
          mkdir -p output/dat
          mkdir -p output/text
          docker run --rm -v ${{ github.workspace }}/output:/geoip/output geoip-generator

      - name: Move files to publish directory
        run: |
          mkdir publish
          cp output/dat/*.dat publish
          cp output/text/direct.txt publish
          cp output/text/proxy.txt publish
          cp output/text/threema.txt publish
          cp output/text/custom.txt publish
          
      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "${{ env.DAILY_TAG }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
          
      - name: Purge jsdelivr CDN
        run: |
          cd publish || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.DAILY_TAG }}
          name: ${{ env.DAILY_TAG }}
          prerelease: false
          draft: false
          files: "publish/*"